# ============================
#         Zinit Setup
# ============================

# Load Zinit for plugin management
#source ~/.local/share/zinit/zinit.zsh
#source ~/.local/share/zinit/zinit.git/zinit.zsh
source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"


# Enable completion and colors
autoload -Uz compinit && compinit
autoload -U colors && colors
setopt prompt_subst

# ============================
#        Plugins (async)
# ============================

# zsh-autosuggestions (for auto-completions)
zinit ice wait"1" blockf lucid atload"_zsh_autosuggest_start"
zinit light zsh-users/zsh-autosuggestions

# fast-syntax-highlighting (for syntax highlighting)
zinit ice wait"2" blockf compile
zinit light zdharma-continuum/fast-syntax-highlighting

# zsh-autocomplete (for advanced auto-completion)
zinit ice wait"3" blockf compile
zinit light marlonrichert/zsh-autocomplete

# Git prompt (with git status)
zinit ice blockf pick"zshrc.sh"
zinit light olivierverdier/zsh-git-prompt

# ============================
#    Git Prompt Configuration
# ============================

# Enable Git Prompt symbols
export GIT_PROMPT_SHOW_UPSTREAM=1
export GIT_PROMPT_SYMBOLS_AHEAD="↑"
export GIT_PROMPT_SYMBOLS_BEHIND="↓"
export GIT_PROMPT_SYMBOLS_NO_REMOTE_TRACKING="L"
export GIT_PROMPT_SYMBOLS_UNTRACKED="?"
export GIT_PROMPT_SYMBOLS_MODIFIED="✗"
export GIT_PROMPT_SYMBOLS_STAGED="+"
export GIT_PROMPT_SYMBOLS_CLEAN="✓"
export GIT_PROMPT_START="["
export GIT_PROMPT_END="]"

# ============================
#      Prompt & Header Line
# ============================

# Show Git status if in a Git repo
function git_prompt() {
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    local branch git_status_symbol
    branch=$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse --short HEAD)

    # Check for uncommitted changes
    if [[ -n "$(git status --porcelain 2>/dev/null)" ]]; then
      git_status_symbol="%F{red}✗%f"
    else
      git_status_symbol="%F{green}✓%f"
    fi

    echo " %F{yellow}[ $branch $git_status_symbol]%f"
  fi
}

# Header line before prompt
function precmd() {
  local width=$(tput cols)
  local userhost="${USER}@${HOST}"
  local color="%F{242}"
  local reset="%f"
  print -P "${color}$(printf '%*s' "$width" '' | tr ' ' '-')${reset}"
}

# Main Prompt
PROMPT='%F{green}%~%f$(git_prompt) %F{blue}»%f '
RPROMPT='%F{242}%n@%m%f'

# ============================
#       Shared History
# ============================

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

setopt share_history
setopt inc_append_history
setopt hist_ignore_dups
setopt hist_reduce_blanks
setopt extended_history

# ============================
#       Aliases & Custom
# ============================

# Load additional aliases
[[ -f ~/.zsh_aliases ]] && source ~/.zsh_aliases
[[ -f ~/.copyfile ]] && source ~/.copyfile

# ============================
#         Conda Settings
# ============================

# Auto-install Conda if not found
#if ! command -v conda &> /dev/null; then
#  echo "⚠️  Conda not found. Installing Miniconda..."

  # Download & install Miniconda silently
#  MINICONDA_INSTALLER=Miniconda3-latest-Linux-x86_64.sh
#  INSTALL_DIR="$HOME/miniconda3"

  # Download only if the installer doesn't already exist
#  if [ ! -f "/tmp/$MINICONDA_INSTALLER" ]; then
#    curl -Ls -o /tmp/$MINICONDA_INSTALLER https://repo.anaconda.com/miniconda/$MINICONDA_INSTALLER
#  fi

#  bash /tmp/$MINICONDA_INSTALLER -b -p "$INSTALL_DIR"

  # Add to PATH and initialize
#  export PATH="$INSTALL_DIR/bin:$PATH"
#  eval "$($INSTALL_DIR/bin/conda shell.zsh hook)"
#  conda init zsh
#  conda config --set auto_activate_base false

#  echo "✅ Miniconda installed and initialized successfully!"
#fi

# ============================
#         Java Settings
# ============================

if [ -d "/usr/lib/jvm/java-21-openjdk-amd64" ]; then
  export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
  export PATH=$JAVA_HOME/bin:$PATH
fi
### End of Zinit's installer chunk

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/saman/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/saman/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/saman/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/saman/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

